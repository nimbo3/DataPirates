- hosts: localhost
  vars:
    git_repository_url: https://github.com/nimbo3/DataPirates.git
    git_repository_branch: master
    project_module_name: crawler
    project_module_version: 1.0-SNAPSHOT
    crawler_deploy_dir: /opt/data-pirates/
  tasks:
  - name: Install needed packages with apt
    apt:
      name: "{{ packages }}"
    vars:
      packages:
        - git
        - maven

  - name: Get latest project files from github
    git:
      repo: "{{ git_repository_url }}"
      dest: "{{ crawler_deploy_dir }}"
      force: yes
      version: "{{ git_repository_branch }}"
    register: git

  - name: Create runnable jar file with maven
    command: mvn clean package -DskipTests
    register: mvn
    changed_when: '"BUILD FAILURE" not in mvn.stdout'
    args:
      chdir: "{{ crawler_deploy_dir }}{{ project_module_name }}"


- hosts: slaves
  vars:
    jmx_exporter_url: https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.12.0/jmx_prometheus_javaagent-0.12.0.jar
    jmx_exporter_name: jmx_exporter
    project_module_name: crawler
    project_module_version: 1.0-SNAPSHOT
    crawler_deploy_dir: /opt/data-pirates/
    update: true
    JAVA_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=0.0.0.0 -XX:+UseG1GC
    PROCESS: jar
  tasks:
  - name: Create Deploy dir
    file:
      path: /opt/deploy
      state: directory
  - name: Upload jar file
    copy:
      src: "{{ crawler_deploy_dir }}{{ project_module_name }}/target/{{ project_module_name }}-{{ project_module_version }}.jar"
      dest: "/opt/deploy/{{ project_module_name }}-{{ project_module_version }}.jar"
    register: upjar
  - name: block
    block:
    - name: Upload config file
      copy:
        src: config.properties
        dest: "/opt/deploy/config.properties"

    - name: Copy profile folder near runnable jar
      copy:
        src: "{{ crawler_deploy_dir }}{{ project_module_name }}/src/main/resources/profiles"
        dest: "/opt/deploy/"

    - name: Download jmx exporter
      get_url:
        url: "{{ jmx_exporter_url }}"
        dest: "/opt/deploy/{{ jmx_exporter_name }}.jar"

    - name: Create jmx exporter config
      copy:
        dest: "/opt/deploy/config.yaml"
        content: '---

        username:

        password:

        rules:

        - pattern: ".*"

        '
    when: upjar.changed

  - name: Get running crawler process
    shell: "jps | grep {{ PROCESS }}"
    register: running_process
    ignore_errors: yes

  - name: Kill running crawler process
    shell: kill $(jps | grep {{ PROCESS }} | awk '{print $1}')
    when: '"jar" in running_process.stdout' or update
#            and upjar.changed

  - name: Run crawler app with jmx exporter
    shell: "LD_LIBRARY_PATH=/usr/local/hadoop/lib/native nohup java {{ JAVA_OPTS }} -javaagent:{{ jmx_exporter_name }}.jar=9070:config.yaml -jar {{ project_module_name }}-{{ project_module_version }}.jar &"
    register: nohup
    changed_when: '"failed" not in nohup.stderr'
    args:
      chdir: /opt/deploy/
    when: '"jar" not in running_process.stdout' or update

